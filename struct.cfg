typedef struct
{
    u8  dac_analog_gain; // =30   #min=1,max=30		//dac模拟增益,取值范围:0-30
    u8  mic_analog_gain; // = 63		//mic模拟增益,取值范围:0-63
    u8  mic_digital_gain; // = 56		//mic数字增益,取值范围:0-15
    u32 aec_st_leakage_decay; // 0
}_GNU_PACKED_ AEC_CFG;


typedef struct
{
    u16 gain;// =64  
	u16 FarEnd_Threshold ;//=200;
	u16 NearEnd_Threshold1;// = 400;
	u16 NearEnd_Threshold2;// = 50;
	u16 DT_max_gain;// = 128;
	u16 DT_min_gain;// = 0;
	u16 NDT_max_gain;// = 128;
	u16 NDT_min_gain;// = 64;
	u16 Fade_Speed;// = 10;
}AEC_First_Amplifier_A_Var;

typedef struct
{
	u16 gain;// = 64;  
    u16 fSpeech; //= *0;
	u16 fSpeech2;// = *10; 
	u16 fSpeech3;// = *10;  
	u16 DT_max_gain;//=512;
	u16 DT_min_gain;//=0;
	u16 NDT_max_gain;//=512;
	u16 NDT_min_gain;//=256;
	u16 FarEnd_Talk_Threshold;// =200;
	u16 NearEnd_Begin_Threshold;// = 400;
	u16 Begin_Prob_Threshold;// = 26213;  %1%  ///%x*32767% #min=1,max=190
	u8  Begin_Prob_Threshold_percent;
	u16 Continue_Prob_Threshold;// = 22937;  %1% ///%x*32767%
	u8 Continue_Prob_Threshold_percent;
	u16 NDT_NearEnd_Begin_Threshod;//=50;
	u16 NDT_Fade_Speed; // 0
}AEC_First_Amplifier_B_Var;


typedef struct
{
    u16 gain;// =64     
    u16 gain1;// =64    
	u16 FadeIn_Time;//=30
	u16 FadeIn_Threshold;//=512
	u16 max_gain;//=8192
	u16 min_gain;//=4096
	u16 Gain_hold_frame;//=4
	u16 amplifer_sw;//=0
}AEC_Second_Amplifier_A_Var;


typedef struct
{
    u16 gain;// =*%64     
	u16 FarEnd_Threshold;//=256
	u16 max_gain; //=159
    u16 min_gain; //=64
}AEC_Third_Amplifier_A_Var;


typedef struct
{
	u16 FarEnd_Threshold ;//=200;
	u16 NearEnd_Threshold;// = 400;
	u16 max_gain; // 0
	u16 min_gain; // 0
}AEC_Fourth_Amplifier_A_Var;


typedef struct
{
	u32 dest_dac;//=833112  %2% #min:0:max:30 ///%(log((x^4)*32767))/log2 * 65535%
	u8  dest_dac_percent;
	u32 dest_adc;//=636500  %2%  ///%(log((x^4)*32767))/log2 * 65535%
	u8  dest_adc_percent;
}AEC_Agc_A_Var;

